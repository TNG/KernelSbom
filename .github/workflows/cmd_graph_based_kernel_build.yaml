# SPDX-FileCopyrightText: 2025 TNG Technology Consulting GmbH
#
# SPDX-License-Identifier: GPL-2.0-only

name: CMD Graph Based Kernel Builds

on:
  workflow_dispatch:
    inputs:
      test_archive:
        description: 'Name of the test archive to download from https://fileshare.tngtech.com/d/e69946da808b41f88047/'
        required: false
        default: 'linux-defconfig.tar.gz'
      freeDiskSpace:
        type: boolean
        default: false
        description: whether to free disk space before building the kernel

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        if: ${{ inputs.freeDiskSpace }}

      - uses: actions/checkout@v4

      - name: Install Dependencies and Linux Kernel
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              build-essential linux-image-generic linux-headers-generic bc \
              flex bison python3 python3-pip python3-venv git libelf-dev libssl-dev

      - name: Download Linux Kernel Test Data
        run: |
          test_archive="${{ inputs.test_archive }}"
          echo "Downloading $test_archive"
          curl -L -o "$test_archive" "https://fileshare.tngtech.com/d/e69946da808b41f88047/files/?p=%2F$test_archive&dl=1"
          tar -xzf "$test_archive"
          rm "$test_archive"

      # Create the linux_cmd directory which contains only source files referenced in the cmd graph
      - name: Create linux_cmd
        run: python3 sbom_analysis/cmd_graph_based_kernel_build/cmd_graph_based_kernel_build.py

      # Build kernel with the original .config using only source files referenced in the cmd graph
      - name: Cmd Graph Based Kernel Build
        run: |
          cd linux_cmd
          mkdir kernel_build
          cp ../linux/kernel_build/.config kernel_build/.config
          make olddefconfig O=kernel_build
          make -j$(nproc) O=kernel_build
